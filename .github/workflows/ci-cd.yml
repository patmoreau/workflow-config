name: ci-cd

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

concurrency:
  group: ci-cd-${{ github.ref }}
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  check_changes:
    uses: ./.github/workflows/check-changes-action.yml
    with:
      file_patterns: '.*'

  set-version:
    runs-on: ubuntu-latest
    needs: check_changes
    if: >
      (needs.check_changes.outputs.code_was_changed == 'true') ||
      (github.event_name == 'release' && github.event.action == 'created')

    outputs:
      version: ${{ steps.gitversion.outputs.majorMinorPatch }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Disable workflow commands
        run: |
          echo "::stop-commands::`echo -n ${{ github.token }} | sha256sum | head -c 64`"

      - name: Ensure .NET Installed
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: "5.x"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v1.1.1
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      - name: Display GitVersion outputs
        run: |
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}"

      - name: Enable workflow commands
        run: |
          echo "::`echo -n ${{ github.token }} | sha256sum | head -c 64`::"

  tagging:
    runs-on: ubuntu-latest
    needs: [check_changes, set-version]
    if: needs.check_changes.outputs.code_was_changed == 'true'

    env:
      VERSION: ${{ needs.set-version.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - name: Tag version
        # if:   github.event_name == 'push' && github.event.action != 'closed'
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            try {
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: "tags/v${{ env.VERSION }}"
              })
            } catch (e) {
              console.log("The v${{ env.VERSION }} tag doesn't exist yet: " + e)
            }
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/v${{ env.VERSION }}",
              sha: context.sha
            })

  create_check:
    needs: [check_changes, tagging]
    uses: ./.github/workflows/create-check.yml
    with:
      code_was_changed: ${{ needs.check_changes.outputs.code_was_changed }}
      check_name: 'workflow-config-check'
      check_result: ${{ needs.tagging.result }}

