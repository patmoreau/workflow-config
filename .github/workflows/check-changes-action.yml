name: check-for-code-changes
on:
  workflow_call:
    inputs:
      file_patterns:
        required: true
        type: string
    outputs:
      code_was_changed:
        value: ${{ jobs.check_changes.outputs.code_was_changed }}
        description: "Whether code was changed"

jobs:
  check_changes:
    runs-on: ubuntu-latest
    outputs:
      code_was_changed: ${{ steps.check_changes.outputs.code_was_changed }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set variables
        id: set_vars
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "base_sha=${{ github.event.pull_request.base.sha }}" >> $GITHUB_OUTPUT
            echo "head_sha=${{ github.event.pull_request.head.sha }}" >> $GITHUB_OUTPUT
          else
            echo "base_sha=${{ github.event.before }}" >> $GITHUB_OUTPUT
            echo "head_sha=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Check for changes
        run: echo "CHANGED=$(git diff --name-only ${{ steps.set_vars.outputs.base_sha }}..${{ steps.set_vars.outputs.head_sha }} | tr '\n' ',')" >> $GITHUB_ENV

      - name: Check for code changes
        id: check_changes
        run: |
          echo "$CHANGED"
          IFS=',' read -ra ADDR <<< "$CHANGED"
          for i in "${ADDR[@]}"; do
            if [[ $i =~ ${{ inputs.file_patterns }} ]]; then
              echo "code_was_changed=true" >> $GITHUB_OUTPUT
              exit 0
            fi
          done
          echo "code_was_changed=false" >> $GITHUB_OUTPUT

      - name: Code was changed
        run: |
          echo "The code was changed: ${{ steps.check_changes.outputs.code_was_changed }}"
